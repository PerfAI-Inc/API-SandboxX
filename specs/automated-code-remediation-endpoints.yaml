openapi: 3.0.0
info:
  title: Automated Code Remediation API
  description: API endpoints for testing automated code remediation
  version: 1.0.0
servers:
  - url: http://13.93.150.111:3000/
    description: Development server

paths:
  /api/remediation:
    get:
      summary: Get all remediation items
      description: Retrieves all remediation items
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Retrieved successfully"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-29T12:00:00.000Z"

    post:
      summary: Create a new remediation item
      description: Creates a new remediation item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemediationItem"
      responses:
        "201":
          description: Successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Created successfully"
                  data:
                    $ref: "#/components/schemas/RemediationItem"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-29T12:00:00.000Z"

  /api/remediation/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID of the remediation item

    get:
      summary: Get a remediation item by ID
      description: Retrieves a specific remediation item by ID
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Retrieved item by ID"
                  id:
                    type: string
                    example: "123"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-29T12:00:00.000Z"

    put:
      summary: Update a remediation item completely
      description: Updates all fields of a remediation item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemediationItem"
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Updated successfully with PUT"
                  id:
                    type: string
                    example: "123"
                  data:
                    $ref: "#/components/schemas/RemediationItem"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-29T12:00:00.000Z"

    patch:
      summary: Update a remediation item partially
      description: Updates selected fields of a remediation item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemediationItemPartial"
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Updated successfully with PATCH"
                  id:
                    type: string
                    example: "123"
                  data:
                    type: object
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-29T12:00:00.000Z"

    delete:
      summary: Delete a remediation item
      description: Deletes a specific remediation item by ID
      responses:
        "200":
          description: Successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Deleted successfully"
                  id:
                    type: string
                    example: "123"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-05-29T12:00:00.000Z"

components:
  schemas:
    RemediationItem:
      type: object
      required:
        - title
        - description
        - severity
      properties:
        title:
          type: string
          example: "Fix memory leak"
        description:
          type: string
          example: "Memory leak detected in authentication module"
        severity:
          type: string
          enum: [low, medium, high, critical]
          example: "high"
        assignee:
          type: string
          example: "john.doe"
        status:
          type: string
          enum: [open, in-progress, resolved, closed]
          default: "open"
          example: "open"

    RemediationItemPartial:
      type: object
      properties:
        title:
          type: string
          example: "Fix memory leak"
        description:
          type: string
          example: "Memory leak detected in authentication module"
        severity:
          type: string
          enum: [low, medium, high, critical]
          example: "high"
        assignee:
          type: string
          example: "john.doe"
        status:
          type: string
          enum: [open, in-progress, resolved, closed]
          example: "in-progress"
